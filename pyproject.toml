[build-system]
requires = [
    "setuptools >= 61.2",
    "setuptools_scm[toml]>=3.4.3",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "webbpsf"
description = "Creates simulated point spread functions for the James Webb Space Telescope"
authors = [
    { name = "Association of Universities for Research in Astronomy", email = "help@stsci.edu" },
]
dynamic = [
    "version",
]
readme = "README.rst"
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.21.6",
    "scipy>=1.5.0",
    "matplotlib>=3.2.0",
    "astropy>=5.1.0",
    "photutils>=1.10.0",
    "poppy>=1.0.0",
    "pysiaf>=0.19.1",
    "synphot>=1.0.0",
    "astroquery>=0.4.6",
]

[project.license]
file = "LICENSE.md"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-astropy",
]
docs = [
    "nbsphinx",
    "sphinx",
    "stsci_rtd_theme",
    "sphinx-astropy",
    "sphinx-automodapi",
    "sphinx-issues",
    "tomli; python_version <\"3.11\"",
]

[project.urls]
Homepage = "http://webbpsf.readthedocs.io/"
github_project = "https://github.com/spacetelescope/webbpsf"

[tool.setuptools.packages.find]
namespaces = false

[tool.setuptools.package-data]
"*" = [
    "*.fits, *.csv",
]
"webbpsf.tests" = [
    "data/*",
]

[tool.setuptools_scm]
write_to = "webbpsf/version.py"

[tool.pytest.ini_options]
minversion = "2.2"
testpaths = [
    "webbpsf/tests",
]
norecursedirs = [
    "build",
    "docs/_build",
]
astropy_header = "true"
doctest_plus = "enabled"
text_file_format = "rst"
addopts = "-p no:warnings"

[tool.coverage.run]
source = [
    "webbpsf",
]
omit = [
    "webbpsf/conftest*",
    "webbpsf/cython_version*",
    "webbpsf/setup_package*",
    "webbpsf/*/setup_package*",
    "webbpsf/*/*/setup_package*",
    "webbpsf/tests/*",
    "webbpsf/*/tests/*",
    "webbpsf/*/*/tests/*",
    "webbpsf/version*",
    "*/webbpsf/conftest*",
    "*/webbpsf/cython_version*",
    "*/webbpsf/setup_package*",
    "*/webbpsf/*/setup_package*",
    "*/webbpsf/*/*/setup_package*",
    "*/webbpsf/tests/*",
    "*/webbpsf/*/tests/*",
    "*/webbpsf/*/*/tests/*",
    "*/webbpsf/version*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "except ImportError",
    "raise AssertionError",
    "raise NotImplementedError",
    "def main(.*):",
    "pragma: py{ignore_python_version}",
]
omit = [
    "webbpsf/conftest*",
    "webbpsf/cython_version*",
    "webbpsf/setup_package*",
    "webbpsf/*/setup_package*",
    "webbpsf/*/*/setup_package*",
    "webbpsf/tests/*",
    "webbpsf/*/tests/*",
    "webbpsf/*/*/tests/*",
    "webbpsf/version*",
    "*/webbpsf/conftest*",
    "*/webbpsf/cython_version*",
    "*/webbpsf/setup_package*",
    "*/webbpsf/*/setup_package*",
    "*/webbpsf/*/*/setup_package*",
    "*/webbpsf/tests/*",
    "*/webbpsf/*/tests/*",
    "*/webbpsf/*/*/tests/*",
    "*/webbpsf/version*",
]

# Ensure ruff is in line with .pep8speaks.yml
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 125
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "W"]
ignore = [
        "W191", # indentation contains tabs
        "W505", # doc line too long
        "E401", # multiple imports on one line
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
